---
import { getImage } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import styles from './index.module.css'

type Props = {
  image: ImageMetadata
  alt: string
  title?: string
  class?: string
  width?: number
  height?: number
  objectFit?: boolean
}

const {
  title,
  alt,
  image,
  class: className,
  width,
  height,
  objectFit
} = Astro.props
const src = image

// const sizes = [260, 520, 1040, 2080]

// TODO: make less repetitive
const image260_webp = await getImage({ src, width: 260, format: 'webp' })
const image520_webp = await getImage({ src, width: 520, format: 'webp' })
const image1040_webp = await getImage({ src, width: 1040, format: 'webp' })
const image2080_webp = await getImage({ src, width: 2080, format: 'webp' })
const image260_jpg = await getImage({ src, width: 260, format: 'jpg' })
const image520_jpg = await getImage({ src, width: 520, format: 'jpg' })
const image1040_jpg = await getImage({ src, width: 1040, format: 'jpg' })
const image2080_jpg = await getImage({ src, width: 2080, format: 'jpg' })

const srcSetWebP = `${image260_webp.src} 260w, ${image520_webp.src} 520w, ${image1040_webp.src} 1040w, ${image2080_webp.src} 2080w`
const srcSetPng = `${image260_jpg.src} 260w, ${image520_jpg.src} 520w, ${image1040_jpg.src} 1040w, ${image2080_jpg.src} 2080w`
---

<figure
  class={`${styles.image} ${className ? className : ''} ${
    objectFit ? styles['objectFit'] : ''
  }`}
>
  {
    objectFit ? (
      <div style={`max-width:${width}px;display:block`}>
        <img
          alt=""
          role="presentation"
          aria-hidden="true"
          src={`data:image/svg+xml;charset=utf-8,%3Csvg%20height="${height}"%20width="${width}"%20xmlns='http://www.w3.org/2000/svg'%20version='1.1'%3E%3C/svg%3E`}
          style="max-width:100%;display:block;position:static"
        />
      </div>
    ) : null
  }
  <picture>
    <source
      type="image/webp"
      srcset={srcSetWebP}
      sizes={`(min-width: ${width}) ${width}, 100vw`}
    />
    <img
      width={width}
      height={height}
      sizes={`(min-width: ${width}) ${width}, 100vw`}
      decoding="async"
      loading="lazy"
      src={image260_jpg.src}
      srcset={srcSetPng}
      alt={alt}
    />
  </picture>

  {title && <figcaption class={styles.imageTitle}>{title}</figcaption>}
</figure>
