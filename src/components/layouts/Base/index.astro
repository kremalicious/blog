---
import '../../../styles/global.css'
import '../../../styles/imports.css'

import Footer from '@components/Footer/index.astro'
import Header from '@components/Header/index.astro'
import config from '@config/blog.config.ts'
import styles from './index.module.css'
import { getImage } from 'astro:assets'
import type { ImageMetadata } from 'astro'
import SchemaOrg, { type Props as SchemaProps } from './SchemaOrg.astro'
import type { CollectionEntry } from 'astro:content'
import { $themeColor } from '@stores/theme'
import { getUmamiConfig } from '@lib/umami'

type Props = CollectionEntry<'articles' | 'links' | 'photos'>['data'] & {
  pageTitle?: string
  description?: string
  image?: ImageMetadata
}

const { title, pageTitle, description, style, image, date, updated } =
  Astro.props

const titleFinal =
  title && title !== ''
    ? `${title} ¦ ${config.siteTitle}`
    : `${config.siteTitle} ¦ ${config.siteDescription}`

const descriptionFinal = description
  ? description.slice(0, 160)
  : config.siteDescription

const canonicalURL =
  (Astro.url.pathname === '/'
    ? Astro.site?.href.replace(/\/$/, '')
    : `${Astro.site?.href}${Astro.url.pathname.split('/')[1]}`) ||
  config.siteUrl

const imageFinal = `${Astro.site}${
  image
    ? (await getImage({ src: image, width: 800, format: 'jpg' })).src.replace(
        '/',
        ''
      )
    : 'favicon-512.png'
}`

const schema: SchemaProps = {
  title: titleFinal,
  url: canonicalURL,
  image: imageFinal,
  description: descriptionFinal,
  ...(date && { datePublished: date.toISOString().substring(0, 10) }),
  ...(updated && { dateModified: updated.toISOString().substring(0, 10) })
}

const themeColorInitial = $themeColor.get()
const isProduction = import.meta.env.PROD
const typekitID = import.meta.env.PUBLIC_TYPEKIT_ID
const { UMAMI_SCRIPT_URL, UMAMI_WEBSITE_ID } = getUmamiConfig()
---

<html lang="en">
  <head>
    <meta charset="utf-8" />

    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="generator" content={Astro.generator} />

    <title>{titleFinal}</title>

    <link rel="canonical" href={canonicalURL} />
    <meta name="description" content={descriptionFinal} />
    <meta property="og:title" content={titleFinal} />
    <meta property="og:image" content={imageFinal} />
    <meta property="og:url" content={canonicalURL} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:creator" content={config.author.twitter} />

    <meta name="theme-color" content={themeColorInitial} />
    <meta name="msapplication-TileColor" content={themeColorInitial} />

    <link rel="icon" href="/favicon.ico" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <link rel="manifest" href="/manifest.json" />

    <link
      rel="alternate"
      title="kremalicious RSS Feed"
      type="application/rss+xml"
      href="/feed.xml"
    />
    <link
      rel="alternate"
      title="kremalicious JSON Feed"
      type="application/json"
      href="/feed.json"
    />

    <SchemaOrg {...schema} />

    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="stylesheet" href={`https://use.typekit.net/${typekitID}.css`} />
    {style && <link rel="stylesheet" href={style} />}

    {
      isProduction && (
        <script
          async
          src={UMAMI_SCRIPT_URL}
          data-website-id={UMAMI_WEBSITE_ID}
        />
      )
    }
  </head>

  <body>
    <Header />

    <main class={styles.document} id="document">
      <div class={styles.content}>
        {pageTitle && <h1 class={styles.pagetitle}>{pageTitle}</h1>}
        <slot />
      </div>
    </main>

    <Footer />
  </body>
</html>
