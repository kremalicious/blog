---
import type { CollectionEntry } from 'astro:content'
import LayoutBase from '@layouts/Base/index.astro'
import Title from './Title.astro'
import Actions from './Actions.astro'
import styles from './index.module.css'
import Meta from './Meta.astro'
import Picture from '@components/core/Picture.astro'
import Toc from '@components/Toc/Toc.astro'
import Exif from '@components/Exif/index.astro'

type Props = CollectionEntry<'articles' | 'links' | 'photos'> & {
  lead?: string // comes in through remark plugin as html
  leadRaw?: string // comes in through remark plugin as plain text
  tableOfContents?: string // comes in through remark plugin as html
}

const { data, collection, lead, leadRaw, tableOfContents } = Astro.props
const { title, date, updated, image, linkurl, toc, style, githubLink, exif } =
  data
---

<LayoutBase
  title={title}
  description={leadRaw}
  image={image}
  style={style}
  date={date}
  updated={updated}
>
  <article class={styles.entry}>
    <header>
      <Title linkurl={linkurl} title={title} date={date} updated={updated} />
    </header>

    {
      collection === 'articles' && lead ? (
        <div class={styles.lead} set:html={lead} />
      ) : collection === 'photos' ? (
        <slot />
      ) : null
    }

    {
      image && (
        <Picture
          class={styles.image}
          width={1040}
          height={460}
          image={image}
          alt={title}
        />
      )
    }

    {collection === 'photos' && exif && <Exif exif={exif} />}

    {toc && tableOfContents && <Toc tableOfContents={tableOfContents} />}

    {collection !== 'photos' && <slot />}

    <Meta post={Astro.props} />
    {collection !== 'photos' && <Actions githubLink={githubLink as string} />}

    {
      /* <RelatedPosts isPhotos={collection === 'photos'} tags={tags as string[]} /> */
    }
    {/* <PrevNext prev={prev} next={next} /> */}
  </article>
</LayoutBase>
