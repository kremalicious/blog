---
import type { CollectionEntry } from 'astro:content'
import type { GetStaticPathsOptions, Page } from 'astro'
import { loadAndFormatCollection } from '@lib/astro'
import slugify, { slugifyAll } from '@lib/slugify'
import LayoutArchive from '@components/layouts/Archive.astro'

type Props = {
  page: Page<CollectionEntry<'articles' | 'links' | 'photos'>>
}

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const articles = await loadAndFormatCollection('articles')
  const links = await loadAndFormatCollection('links')
  // const photos = await loadAndFormatCollection('photos')
  const allPosts = [...articles, ...links]
  const allUniqueTags = slugifyAll([
    ...new Set(
      allPosts
        // only map posts which have tags defined
        .filter((post) => post.data.tags)
        .map((post) => post.data.tags)
        .flat()
    )
  ] as string[])

  const allData = allUniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags?.includes(slugify(tag) || '')
    )
    return {
      params: { tag: slugify(tag) },
      props: { posts: filteredPosts }
    }
  })

  return paginate(allData, { pageSize: 20 })
}

// All paginated data + posts are passed on the "page" prop
const { page } = Astro.props
const { tag } = Astro.params
---

<LayoutArchive
  title={`#${tag}`}
  pageTitle={`#${tag} | Page ${page.currentPage} of ${page.lastPage} `}
  page={page}
/>
