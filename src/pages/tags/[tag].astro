---
import type { CollectionEntry } from 'astro:content'
import { loadAndFormatCollection } from '@lib/astro'
import LayoutBase from '@components/layouts/Base/index.astro'
import PostTeaser from '@components/PostTeaser.astro'
import slugify, { slugifyAll } from '@lib/slugify'

type Props = {
  posts: CollectionEntry<'articles' | 'links'>[]
}

export async function getStaticPaths() {
  const articles = await loadAndFormatCollection('articles')
  const links = await loadAndFormatCollection('links')
  // const photos = await loadAndFormatCollection('photos')
  const allPosts = [...articles, ...links]
  const allUniqueTags = slugifyAll([
    ...new Set(
      allPosts
        // only map posts which have tags defined
        .filter((post) => post.data.tags)
        .map((post) => post.data.tags)
        .flat()
    )
  ] as string[])

  return allUniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) =>
      post.data.tags?.includes(slugify(tag) || '')
    )
    return {
      params: { tag: slugify(tag) },
      props: { posts: filteredPosts }
    }
  })
}

const { tag } = Astro.params
const { posts } = Astro.props
---

<style>
  .posts {
    display: grid;
    gap: calc(var(--spacer) * 2);
  }

  @media (min-width: 40rem) {
    .posts {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  .posts h1 {
    font-size: var(--font-size-h4);
  }
</style>

<LayoutBase title={tag} pageTitle={`Posts tagged with ${tag}`}>
  <div class="posts">
    {posts.map((post) => <PostTeaser post={post} />)}
  </div>

  <!-- <Pagination
    currentPage={page.currentPage}
    numPages={page.lastPage}
    slug="/archive"
  /> -->
</LayoutBase>
